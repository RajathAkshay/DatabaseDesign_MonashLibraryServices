spool ./output.txt
-- Generated by Oracle SQL Developer Data Modeler 17.4.0.355.2131
--   at:        2018-04-23 09:46:11 AEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

SET echo ON

-- Name: Rajath Akshay Vanikul
-- Student ID: 29498724


DROP SEQUENCE branch_branch_code_seq;

DROP SEQUENCE author_author_id_seq;

DROP SEQUENCE bor_borrower_id_seq;

DROP SEQUENCE manager_manager_id_seq;

DROP SEQUENCE publisher_publisher_id_seq;



DROP TABLE author CASCADE CONSTRAINTS;

DROP TABLE book CASCADE CONSTRAINTS;

DROP TABLE borrower CASCADE CONSTRAINTS;

DROP TABLE borrower_group CASCADE CONSTRAINTS;

DROP TABLE branch CASCADE CONSTRAINTS;

DROP TABLE isbn_identifier CASCADE CONSTRAINTS;

DROP TABLE loan CASCADE CONSTRAINTS;

DROP TABLE manager CASCADE CONSTRAINTS;

DROP TABLE penalty CASCADE CONSTRAINTS;

DROP TABLE publisher CASCADE CONSTRAINTS;

DROP TABLE reservation CASCADE CONSTRAINTS;

DROP TABLE subject CASCADE CONSTRAINTS;

DROP TABLE title CASCADE CONSTRAINTS;

DROP TABLE title_author CASCADE CONSTRAINTS;

DROP TABLE title_subject CASCADE CONSTRAINTS;

DROP TABLE type CASCADE CONSTRAINTS;

CREATE TABLE author (
    author_id     NUMBER(5) NOT NULL,
    author_name   VARCHAR2(50 CHAR) NOT NULL
);

COMMENT ON COLUMN author.author_id IS
    'author_ID - creates unique number for each author.';

COMMENT ON COLUMN author.author_name IS
    'author_name - shows the name of each author.';

ALTER TABLE author ADD CONSTRAINT author_pk PRIMARY KEY ( author_id );

CREATE TABLE book (
    barcode              NUMBER(10) NOT NULL,
    status               VARCHAR2(20 CHAR) NOT NULL,
    branch_branch_code   NUMBER(3) NOT NULL,
    title_call_number    VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE book
    ADD CHECK ( status IN (
        'available',
        'reserve',
        'borrowed'
    ) );

COMMENT ON COLUMN book.barcode IS
    'barcode is the unique number issues by library for every book. ';

COMMENT ON COLUMN book.status IS
    'status - contains information about borrowal properties of book.
this attribute is restricted to "available" or "reserve" or "borrowed" entries. '
;

ALTER TABLE book ADD CONSTRAINT book_pk PRIMARY KEY ( barcode );

CREATE TABLE borrower (
    borrower_id                      NUMBER(10) NOT NULL,
    borrower_name                    VARCHAR2(50 CHAR) NOT NULL,
    borrower_address                 VARCHAR2(100 CHAR) NOT NULL,
    borrower_flag                    VARCHAR2(10 CHAR) NOT NULL,
    notes                            VARCHAR2(50 CHAR),
    branch_branch_code               NUMBER(3) NOT NULL,
    borrower_group_classification    VARCHAR2(12 CHAR) NOT NULL,
    borrower_group_classification2   VARCHAR2(12 CHAR) NOT NULL
);

ALTER TABLE borrower
    ADD CHECK ( borrower_flag IN (
        'allow',
        'restrict'
    ) );

COMMENT ON COLUMN borrower.borrower_id IS
    'borrower_ID - creates a unique number to identify the borrower.';

COMMENT ON COLUMN borrower.borrower_name IS
    'borrower_name - defines the name of the borrower.';

COMMENT ON COLUMN borrower.borrower_address IS
    'borrower_address - shows the address to reach a borrower.';

COMMENT ON COLUMN borrower.borrower_flag IS
    'borrower_flag - shows if the borrower is allowed to borrow further books or not.';

COMMENT ON COLUMN borrower.notes IS
    'notes - keeps a trach of comments on a borrower.';

CREATE UNIQUE INDEX borrower__idx ON
    borrower ( borrower_group_classification ASC );

ALTER TABLE borrower ADD CONSTRAINT borrower_pk PRIMARY KEY ( borrower_id );

CREATE TABLE borrower_group (
    classification         VARCHAR2(12 CHAR) NOT NULL,
    max_days_of_borrowal   NUMBER(2) NOT NULL,
    borrower_borrower_id   NUMBER NOT NULL
);

ALTER TABLE borrower_group
    ADD CHECK ( classification IN (
        'junior',
        'adult',
        'organisation'
    ) );

COMMENT ON COLUMN borrower_group.classification IS
    'classification of each borrower is entered here.
this attribute tells us if the borrower is junior or adult or belongs to an organisation. '
;

CREATE UNIQUE INDEX borrower_group__idx ON
    borrower_group ( borrower_borrower_id ASC );

ALTER TABLE borrower_group ADD CONSTRAINT borrower_group_pk PRIMARY KEY ( classification );

CREATE TABLE branch (
    branch_code          NUMBER(3) NOT NULL,
    branch_name          VARCHAR2(50 CHAR) NOT NULL,
    branch_address       VARCHAR2(100 CHAR) NOT NULL,
    branch_phone_no      NUMBER(10) NOT NULL,
    manager_manager_id   NUMBER(10) NOT NULL
);

COMMENT ON COLUMN branch.branch_code IS
    'branch_code - unique code given to every branch under the municipality.';

COMMENT ON COLUMN branch.branch_name IS
    'branch_name - shows the name of each branch under the municipality.';

COMMENT ON COLUMN branch.branch_address IS
    'branch_address - shows the address of each branch under the municipality.';

COMMENT ON COLUMN branch.branch_phone_no IS
    'branch_name - shows the name of each branch under the municipality.';

ALTER TABLE branch ADD CONSTRAINT branch_pk PRIMARY KEY ( branch_code );

CREATE TABLE isbn_identifier (
    isbn                VARCHAR2(15 CHAR) NOT NULL,
    title_call_number   VARCHAR2(20 CHAR) NOT NULL
);

COMMENT ON COLUMN isbn_identifier.isbn IS
    'ISBN - is the commercial identifier for each title.';

ALTER TABLE isbn_identifier ADD CONSTRAINT isbn_identifier_pk PRIMARY KEY ( isbn );

CREATE TABLE loan (
    loan_date              DATE NOT NULL,
    expected_returndate    DATE NOT NULL,
    actual_returndate      DATE,
    book_barcode           NUMBER(10) NOT NULL,
    borrower_borrower_id   NUMBER(10) NOT NULL
);

COMMENT ON COLUMN loan.loan_date IS
    'loan_date - shows the date in which book was borrowed.';

COMMENT ON COLUMN loan.expected_returndate IS
    'expected_returndate - shows the lates date for returning a borrowed book.';

COMMENT ON COLUMN loan.actual_returndate IS
    'actual_date - shows the date of return of borrowed book.';

CREATE UNIQUE INDEX loanv1__idx ON
    loan ( book_barcode ASC );

ALTER TABLE loan
    ADD CONSTRAINT loan_pk PRIMARY KEY ( loan_date,
    book_barcode,
    borrower_borrower_id );

CREATE TABLE manager (
    manager_id           NUMBER(10) NOT NULL,
    manager_name         VARCHAR2(50 CHAR) NOT NULL,
    manager_phone_no     NUMBER(10) NOT NULL,
    branch_branch_code   NUMBER(3) NOT NULL
);

COMMENT ON COLUMN manager.manager_id IS
    'manager_ID - contains unique number for each manager.';

COMMENT ON COLUMN manager.manager_name IS
    'manager_name - contains name of each manager';

COMMENT ON COLUMN manager.manager_phone_no IS
    'manager_phone_no - contains contact number of each manager.';

ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( manager_id );

CREATE TABLE penalty (
    payment_amount              NUMBER(5) NOT NULL,
    payment_date                DATE NOT NULL,
    loan_loan_date              DATE NOT NULL,
    loan_book_barcode           NUMBER(10) NOT NULL,
    loan_borrower_borrower_id   NUMBER(10) NOT NULL
);

COMMENT ON COLUMN penalty.payment_amount IS
    'payment_amount - shows the amount over due to pay.';

COMMENT ON COLUMN penalty.payment_date IS
    'payment_date - shows the date of payment.';

ALTER TABLE penalty
    ADD CONSTRAINT penalty_pk PRIMARY KEY ( loan_loan_date,
    loan_book_barcode,
    loan_borrower_borrower_id );

CREATE TABLE publisher (
    publisher_id     NUMBER(5) NOT NULL,
    publisher_name   VARCHAR2(50 CHAR) NOT NULL
);

COMMENT ON COLUMN publisher.publisher_id IS
    'publisher_ID - creates unique number for each publisher. ';

COMMENT ON COLUMN publisher.publisher_name IS
    'publisher_name - shows the name of publisher.';

ALTER TABLE publisher ADD CONSTRAINT publisher_pk PRIMARY KEY ( publisher_id );

CREATE TABLE reservation (
    reservation_date       DATE NOT NULL,
    book_barcode           NUMBER(10) NOT NULL,
    borrower_borrower_id   NUMBER(10) NOT NULL
);

ALTER TABLE reservation
    ADD CONSTRAINT reservation_pk PRIMARY KEY ( book_barcode,
    reservation_date,
    borrower_borrower_id );

CREATE TABLE subject (
    subject   VARCHAR2(20 CHAR) NOT NULL
);

COMMENT ON COLUMN subject.subject IS
    'subject - shows the genre of each title.';

ALTER TABLE subject ADD CONSTRAINT subject_pk PRIMARY KEY ( subject );

CREATE TABLE title (
    call_number              VARCHAR2(20 CHAR) NOT NULL,
    title                    VARCHAR2(50 CHAR) NOT NULL,
    description              VARCHAR2(1000 CHAR) NOT NULL,
    number_pages             NUMBER(5) NOT NULL,
    language                 VARCHAR2(10 CHAR) NOT NULL,
    date_published           DATE NOT NULL,
    edition                  NUMBER(2) NOT NULL,
    purchase_price           NUMBER(5,2) NOT NULL,
    notes                    VARCHAR2(100 CHAR),
    publisher_publisher_id   NUMBER(5) NOT NULL,
    type_classification      VARCHAR2(10 CHAR) NOT NULL,
    type_reading_level       NUMBER(2) NOT NULL
);

COMMENT ON COLUMN title.call_number IS
    'call_number - is a unique set of code describes properties of the title.';

COMMENT ON COLUMN title.title IS
    'title - defines the cover of a particular book.';

COMMENT ON COLUMN title.description IS
    'description - contains a brief of that title.';

COMMENT ON COLUMN title.number_pages IS
    'number_pages - shows the number of pages in a book.';

COMMENT ON COLUMN title.language IS
    'language - shows the language a book is written.';

COMMENT ON COLUMN title.date_published IS
    'date_published - shows the published date for a book.';

COMMENT ON COLUMN title.edition IS
    'edition - contains the information on version.';

COMMENT ON COLUMN title.purchase_price IS
    'purchase_price - will show the price of a book.';

COMMENT ON COLUMN title.notes IS
    'notes - can be used to note comments on a title';

ALTER TABLE title ADD CONSTRAINT title_pk PRIMARY KEY ( call_number );

CREATE TABLE title_author (
    title_call_number   VARCHAR2(20 CHAR) NOT NULL,
    author_author_id    NUMBER(5) NOT NULL
);

ALTER TABLE title_author ADD CONSTRAINT title_author_pk PRIMARY KEY ( title_call_number,
author_author_id );

CREATE TABLE title_subject (
    title_call_number   VARCHAR2(20 CHAR) NOT NULL,
    subject_subject     VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE title_subject ADD CONSTRAINT title_subject_pk PRIMARY KEY ( title_call_number,
subject_subject );

CREATE TABLE type (
    classification   VARCHAR2(10 CHAR) NOT NULL,
    reading_level    NUMBER(2) NOT NULL
);

ALTER TABLE type
    ADD CHECK ( classification IN (
        'reference',
        'fiction'
    ) );

ALTER TABLE type
    ADD CHECK ( reading_level IN (
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30
    ) );

ALTER TABLE type ADD CONSTRAINT type_pk PRIMARY KEY ( classification,
reading_level );

ALTER TABLE book
    ADD CONSTRAINT book_branch_fk FOREIGN KEY ( branch_branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE book
    ADD CONSTRAINT book_title_fk FOREIGN KEY ( title_call_number )
        REFERENCES title ( call_number );

ALTER TABLE borrower
    ADD CONSTRAINT borrower_borrower_group_fk FOREIGN KEY ( borrower_group_classification2 )
        REFERENCES borrower_group ( classification );

ALTER TABLE borrower
    ADD CONSTRAINT borrower_branch_fk FOREIGN KEY ( branch_branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE branch
    ADD CONSTRAINT branch_manager_fk FOREIGN KEY ( manager_manager_id )
        REFERENCES manager ( manager_id );

ALTER TABLE isbn_identifier
    ADD CONSTRAINT isbn_identifier_title_fk FOREIGN KEY ( title_call_number )
        REFERENCES title ( call_number );

ALTER TABLE loan
    ADD CONSTRAINT loan_book_fk FOREIGN KEY ( book_barcode )
        REFERENCES book ( barcode );

ALTER TABLE loan
    ADD CONSTRAINT loan_borrower_fk FOREIGN KEY ( borrower_borrower_id )
        REFERENCES borrower ( borrower_id );

ALTER TABLE manager
    ADD CONSTRAINT manager_branch_fk FOREIGN KEY ( branch_branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE penalty
    ADD CONSTRAINT penalty_loan_fk FOREIGN KEY ( loan_loan_date,
    loan_book_barcode,
    loan_borrower_borrower_id )
        REFERENCES loan ( loan_date,
        book_barcode,
        borrower_borrower_id );

ALTER TABLE reservation
    ADD CONSTRAINT reservation_book_fk FOREIGN KEY ( book_barcode )
        REFERENCES book ( barcode );

ALTER TABLE reservation
    ADD CONSTRAINT reservation_borrower_fk FOREIGN KEY ( borrower_borrower_id )
        REFERENCES borrower ( borrower_id );

ALTER TABLE title_author
    ADD CONSTRAINT title_author_author_fk FOREIGN KEY ( author_author_id )
        REFERENCES author ( author_id );

ALTER TABLE title_author
    ADD CONSTRAINT title_author_title_fk FOREIGN KEY ( title_call_number )
        REFERENCES title ( call_number );

ALTER TABLE title
    ADD CONSTRAINT title_publisher_fk FOREIGN KEY ( publisher_publisher_id )
        REFERENCES publisher ( publisher_id );

ALTER TABLE title_subject
    ADD CONSTRAINT title_subject_subject_fk FOREIGN KEY ( subject_subject )
        REFERENCES subject ( subject );

ALTER TABLE title_subject
    ADD CONSTRAINT title_subject_title_fk FOREIGN KEY ( title_call_number )
        REFERENCES title ( call_number );

ALTER TABLE title
    ADD CONSTRAINT title_type_fk FOREIGN KEY ( type_classification,
    type_reading_level )
        REFERENCES type ( classification,
        reading_level );

CREATE SEQUENCE author_author_id_seq START WITH 1 NOCACHE ORDER;

CREATE SEQUENCE bor_borrower_id_seq START WITH 1 NOCACHE ORDER;

CREATE SEQUENCE branch_branch_code_seq START WITH 100 MINVALUE 100 MAXVALUE 999 NOCACHE ORDER;

CREATE SEQUENCE manager_manager_id_seq START WITH 1 NOCACHE ORDER;

CREATE SEQUENCE publisher_publisher_id_seq START WITH 1 NOCACHE ORDER;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             3
-- ALTER TABLE                             39
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          5
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
SET echo OFF

spool off